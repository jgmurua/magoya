name: Build, Test and Push Docker image

on:
  pull_request:
    branches:
      - main
      - feature/*
      
  workflow_dispatch:
    inputs:
      run:
        description: 'run'
        type: boolean
        required: true
        default: true
        
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Paso 1: Instalar Go y ejecutar los tests
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20'

    - name: Run Unit Tests
      run: |
        go mod init app-color
        go mod tidy 
        go test ./... -v 

    # Paso 2: Login en DockerHub
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Paso 3: Construir y subir la imagen a DockerHub
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/app-color:latest
        file: app-color/Dockerfile
        context: app-color/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      CLUSTER_NAME: eks-simple

    steps:
    - name: Checkout de manifiestos
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region us-east-1

    - name: Verify AWS Credentials
      run: aws sts get-caller-identity

    - name: Test kubectl connectivity
      run: kubectl get nodes
    
    - name: Deploy to EKS
      run: kubectl apply -f app-color/app-color.yaml -n app-color --validate=false
